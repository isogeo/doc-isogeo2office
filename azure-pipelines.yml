# Global variables
variables:
  project_name: "Documentation - Isogeo To Office"
  project_name_clean: "isogeo2office"

trigger:
  batch: true
  branches:
    include:
    - master
  tags:
    include:
    - "*"

pr:
- master

jobs:
- job: 'Build'
  pool:
    vmImage: "windows-2019"
  
  steps:
  - task: NodeTool@0 
    inputs:
      versionSpec: '10.15.x'
    displayName: 'Install Node.js 10.15.x'
 
  # - task: CacheBeta@0
  #   inputs:
  #     key: yarn | $(Agent.OS) | $(Build.SourcesDirectory)/yarn.lock
  #     path: $(Pipeline.Workspace)/.cache/yarn
  #   displayName: 'Cache yarn packages'

  - script: yarn global add gitbook
    displayName: 'Install Gitbook'

  - script: yarn install --frozen-lockfile --ignore-engines
    displayName: 'Install dependencies'

  - script: yarn gitbook install
    displayName: 'Install Gitbook dependencies'

  - script: yarn gitbook build ./ dist/
    displayName: 'Build Gitbook HTML output'

  - task: DeleteFiles@1
    displayName: 'Remove files to be ignored in publication'
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)'
      Contents: |
        azure-pipelines.yml
        package.json
        yarn.lock

  - task: PublishPipelineArtifact@1
    displayName: 'Publish Artifact: $(project_name)'
    inputs:
      path: $(System.DefaultWorkingDirectory)/dist
      artifact: '$(project_name)_$(Build.SourceBranchName)_$(Build.Id)'

  - task: AzureFileCopy@3
    inputs:
      SourcePath: '$(System.DefaultWorkingDirectory)/dist'
      azureSubscription: 'Isogeo - MPN(82885610-5841-4749-8d71-46f56b643ad2)'
      Destination: 'AzureBlob'
      storage: 'qaisogeohelp'
      ContainerName: '$web'
      BlobPrefix: '$(project_name_clean)'

# PUBLISH
# only with a tagged commit (see: https://github.com/MicrosoftDocs/vsts-docs/issues/3281)
- job: 'Publish'
  dependsOn: 'Build'
  pool:
    vmImage: "windows-2019"
  condition:
    contains(variables['Build.SourceBranch'], 'tags')

  steps:
  - task: GitHubRelease@1
    inputs:
      gitHubConnection: 'github_isogeo'
      repositoryName: '$(Build.Repository.Name)'
      action: 'edit'
      target: '$(Build.Id)'
      changeLogCompareToRelease: 'lastFullRelease'
      changeLogType: 'issueBased'
